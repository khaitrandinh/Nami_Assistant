// cron.js
const cron = require("node-cron");
const { exec } = require("child_process");
require('dotenv').config();
// Schedule: m·ªói ng√†y l√∫c 00:00 (gi·ªù VN)
// Ch·∫°y v√†o 14:15 ng√†y 1 th√°ng 1, 4, 7, 10 (t·ª©c l√† m·ªói qu√Ω 1 l·∫ßn)
cron.schedule("00 00 1 1,4,7,10 *", () => {
  const now = new Date().toLocaleString("vi-VN", { timeZone: "Asia/Ho_Chi_Minh" });
  console.log(`üîÑ [${now}] Rebuild Binance Academy KB b·∫Øt ƒë·∫ßu...`);

  exec("node utils/rebuild-academy-kb.js", (error, stdout, stderr) => {
    if (error) {
      console.error(`‚ùå [${now}] L·ªói khi rebuild:`, error.message);
      return;
    }
    if (stderr) {
      console.warn(`‚ö†Ô∏è [${now}] Stderr:`, stderr.trim());
    }
    console.log(`‚úÖ [${now}] Rebuild ho√†n th√†nh:\n${stdout.trim()}`);
  });
  exec("node utils/namiFaq.js", (error, stdout, stderr) => {
    if (error) {
      console.error(`‚ùå [${now}] L·ªói khi rebuild:`, error.message);
      return;
    }
    if (stderr) {
      console.warn(`‚ö†Ô∏è [${now}] Stderr:`, stderr.trim());
    }
    console.log(`‚úÖ [${now}] Rebuild ho√†n th√†nh:\n${stdout.trim()}`);
  });
}, {
  scheduled: true,
  timezone: "Asia/Ho_Chi_Minh"
});

console.log("‚è∞ Cron job ƒë√£ ƒë∆∞·ª£c kh·ªüi ƒë·ªông: s·∫Ω ch·∫°y v√†o 14:15 ng√†y 01 c·ªßa c√°c th√°ng 1, 4, 7, 10 (m·ªói qu√Ω m·ªôt l·∫ßn, gi·ªù VN).");
